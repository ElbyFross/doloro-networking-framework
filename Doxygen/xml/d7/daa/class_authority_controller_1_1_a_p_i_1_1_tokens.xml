<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens" kind="class" language="C#" prot="public">
    <compoundname>AuthorityController::API::Tokens</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1a3077a786044bdd530ad50dbd615f8beb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool AuthorityController.API.Tokens.IsHasEnoughRigths</definition>
        <argsstring>(string token, out string[] requesterRights, out string error, params string[] requiredRights)</argsstring>
        <name>IsHasEnoughRigths</name>
        <param>
          <type>string</type>
          <declname>token</declname>
        </param>
        <param>
          <type>out string []</type>
          <declname>requesterRights</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>requiredRights</declname>
        </param>
        <briefdescription>
<para>Check does this token has all requested rights. If token is not registred on this server then will throw UnauthorizedAccessException. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>Unitque token of the user.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Error that describe a reasone of fail. Could be send backward to client.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requesterRights</parametername>
</parameternamelist>
<parameterdescription>
<para>Rights detected to that token.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requiredRights</parametername>
</parameternamelist>
<parameterdescription>
<para>Array that contain the rights that need to by existed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" line="33" column="1" bodyfile="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" bodystart="33" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1ab1d580a971a86c8e5b3c7c189aa65381" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool AuthorityController.API.Tokens.IsHasEnoughRigths</definition>
        <argsstring>(string token, out string[] requesterRights, params string[] requiredRights)</argsstring>
        <name>IsHasEnoughRigths</name>
        <param>
          <type>string</type>
          <declname>token</declname>
        </param>
        <param>
          <type>out string []</type>
          <declname>requesterRights</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>requiredRights</declname>
        </param>
        <briefdescription>
<para>Check does this token has all requested rights. If token is not registred on this server then will throw UnauthorizedAccessException. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requiredRights</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requesterRights</parametername>
</parameternamelist>
<parameterdescription>
<para>Rights detected to that token.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" line="76" column="1" bodyfile="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" bodystart="76" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1a8b153378b97af2634e8dab9ff1fa48a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string AuthorityController.API.Tokens.AuthorizeNewGuestToken</definition>
        <argsstring>(PipesProvider.Server.TransmissionControllers.BroadcastingServerTransmissionController _)</argsstring>
        <name>AuthorizeNewGuestToken</name>
        <param>
          <type><ref refid="db/df3/class_pipes_provider_1_1_server_1_1_transmission_controllers_1_1_broadcasting_server_transmission_controller" kindref="compound">PipesProvider.Server.TransmissionControllers.BroadcastingServerTransmissionController</ref></type>
          <declname>_</declname>
        </param>
        <briefdescription>
<para>Authorizing new token with guest&apos;s rights, and return information in query format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_</parametername>
</parameternamelist>
<parameterdescription>
<para>Droped param not relative to this broadcasting.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Token that can be used by client in queries.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" line="94" column="1" bodyfile="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1a0ba1c2d69ffbc73d78b7b16735f7fb5a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string AuthorityController.API.Tokens.AuthorizeNewGuestToken</definition>
        <argsstring>()</argsstring>
        <name>AuthorizeNewGuestToken</name>
        <briefdescription>
<para>Authorizing new token with guest&apos;s rights, and return information in query format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Token that can be used by client in queries.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" line="104" column="1" bodyfile="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" bodystart="104" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" line="22" column="1" bodyfile="D:/Work/GitHub/doloro-networking-framework/Addons/AuthorityController/API/Tokens.cs" bodystart="21" bodyend="121"/>
    <listofallmembers>
      <member refid="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1a8b153378b97af2634e8dab9ff1fa48a5" prot="public" virt="non-virtual"><scope>AuthorityController::API::Tokens</scope><name>AuthorizeNewGuestToken</name></member>
      <member refid="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1a0ba1c2d69ffbc73d78b7b16735f7fb5a" prot="public" virt="non-virtual"><scope>AuthorityController::API::Tokens</scope><name>AuthorizeNewGuestToken</name></member>
      <member refid="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1a3077a786044bdd530ad50dbd615f8beb" prot="public" virt="non-virtual"><scope>AuthorityController::API::Tokens</scope><name>IsHasEnoughRigths</name></member>
      <member refid="d7/daa/class_authority_controller_1_1_a_p_i_1_1_tokens_1ab1d580a971a86c8e5b3c7c189aa65381" prot="public" virt="non-virtual"><scope>AuthorityController::API::Tokens</scope><name>IsHasEnoughRigths</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
